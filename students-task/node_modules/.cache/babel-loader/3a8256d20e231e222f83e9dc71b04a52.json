{"ast":null,"code":"import _defineProperty from \"/home/miqayel/students-task/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ls from 'local-storage';\nconst initialState = {\n  name: '',\n  age: '',\n  progress: 'Wery Good'\n};\nconst usersArray = [];\nexport default function addNewStudent(state = initialState, action) {\n  switch (action.type) {\n    case 'CHANGE_NAME':\n      state = _objectSpread({}, state, {\n        name: action.peyload\n      });\n      break;\n\n    case 'CHANGE_AGE':\n      state = _objectSpread({}, state, {\n        age: action.peyload\n      });\n      break;\n\n    case 'CHANGE_PROGRESS':\n      state = _objectSpread({}, state, {\n        progress: action.peyload\n      });\n      break;\n\n    case 'ADD_NEW_STUDENT':\n      state = ls.set('student', JSON.stringify(state));\n      var storedNames = JSON.parse(localStorage.getItem(\"student\"));\n      console.log(storedNames);\n      break;\n\n    default:\n      state = _objectSpread({}, state);\n  }\n\n  console.log(state, 'reduser');\n  return state;\n}","map":{"version":3,"sources":["/home/miqayel/students-task/src/redusers/addNewStudent.js"],"names":["ls","initialState","name","age","progress","usersArray","addNewStudent","state","action","type","peyload","set","JSON","stringify","storedNames","parse","localStorage","getItem","console","log"],"mappings":";;;;;;AAAA,OAAOA,EAAP,MAAe,eAAf;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,GAAG,EAAE,EAFY;AAGjBC,EAAAA,QAAQ,EAAE;AAHO,CAArB;AAMA,MAAMC,UAAU,GAAG,EAAnB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAK,GAAGN,YAA/B,EAA6CO,MAA7C,EAAoD;AAC/D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,aAAL;AACAF,MAAAA,KAAK,qBACEA,KADF;AAEDL,QAAAA,IAAI,EAAEM,MAAM,CAACE;AAFZ,QAAL;AAIA;;AACA,SAAK,YAAL;AACIH,MAAAA,KAAK,qBACEA,KADF;AAEDJ,QAAAA,GAAG,EAAEK,MAAM,CAACE;AAFX,QAAL;AAIJ;;AACA,SAAK,iBAAL;AACIH,MAAAA,KAAK,qBACEA,KADF;AAEDH,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAFhB,QAAL;AAIJ;;AACA,SAAK,iBAAL;AAEIH,MAAAA,KAAK,GACDP,EAAE,CAACW,GAAH,CAAO,SAAP,EAAkBC,IAAI,CAACC,SAAL,CAAeN,KAAf,CAAlB,CADJ;AAEI,UAAIO,WAAW,GAAGF,IAAI,CAACG,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACJ;;AACJ;AACAP,MAAAA,KAAK,qBAAOA,KAAP,CAAL;AA3BJ;;AA6BAW,EAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ,EAAkB,SAAlB;AACA,SAAOA,KAAP;AACH","sourcesContent":["import ls from 'local-storage';\n\nconst initialState = {\n    name: '',\n    age: '',\n    progress: 'Wery Good'\n}\n\nconst usersArray = [];\n\nexport default function addNewStudent(state = initialState, action){\n    switch(action.type){\n        case 'CHANGE_NAME':\n        state = {\n            ...state,\n            name: action.peyload\n        }\n        break;\n        case 'CHANGE_AGE':\n            state = {\n                ...state,\n                age: action.peyload\n            }\n        break;\n        case 'CHANGE_PROGRESS':\n            state = {\n                ...state,\n                progress: action.peyload\n            }\n        break;\n        case 'ADD_NEW_STUDENT':\n            \n            state = \n                ls.set('student', JSON.stringify(state));\n                var storedNames = JSON.parse(localStorage.getItem(\"student\"));\n                console.log(storedNames)\n            break;\n        default: \n        state = {...state}\n    }\n    console.log(state,'reduser')\n    return state;\n}"]},"metadata":{},"sourceType":"module"}