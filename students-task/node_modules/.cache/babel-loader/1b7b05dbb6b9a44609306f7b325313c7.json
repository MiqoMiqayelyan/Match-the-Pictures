{"ast":null,"code":"import _defineProperty from \"/home/miqayel/students-task/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ls from 'local-storage';\nconst initialState = {\n  myArray: []\n};\nexport default function addNewStudent(state = initialState, action) {\n  switch (action.type) {\n    case 'ADD_NEW_STUDENT':\n      state = _objectSpread({}, state, {\n        myArray: state.myArray.concat(action.payload)\n      }); // {id: '', name: '', date: '', prog: ''}\n\n      console.log(state); //ls.set('student', JSON.stringify(state));\n\n      break;\n\n    default:\n      state = _objectSpread({}, state);\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/miqayel/students-task/src/redusers/addNewStudent.js"],"names":["ls","initialState","myArray","addNewStudent","state","action","type","concat","payload","console","log"],"mappings":";;;;;;AAAA,OAAOA,EAAP,MAAe,eAAf;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;AAIA,eAAe,SAASC,aAAT,CAAuBC,KAAK,GAAGH,YAA/B,EAA6CI,MAA7C,EAAoD;AAC/D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,iBAAL;AAEIF,MAAAA,KAAK,qBACEA,KADF;AAEDF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcK,MAAd,CAAqBF,MAAM,CAACG,OAA5B;AAFR,QAAL,CAFJ,CAKM;;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EANJ,CAOI;;AAEA;;AACJ;AACAA,MAAAA,KAAK,qBAAOA,KAAP,CAAL;AAZJ;;AAeA,SAAOA,KAAP;AACH","sourcesContent":["import ls from 'local-storage';\n\nconst initialState = {\n    myArray: []\n};\n\nexport default function addNewStudent(state = initialState, action){\n    switch(action.type){\n        case 'ADD_NEW_STUDENT':\n            \n            state = {\n                ...state,\n                myArray: state.myArray.concat(action.payload)\n            } // {id: '', name: '', date: '', prog: ''}\n            console.log(state)\n            //ls.set('student', JSON.stringify(state));\n\n            break;\n        default: \n        state = {...state}\n    }\n\n    return state;\n}"]},"metadata":{},"sourceType":"module"}